{
	"info": {
		"_postman_id": "c12dff0d-7de2-4164-a1d4-ed11e6a1d567",
		"name": "User create store and item",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5a40a7dc-eb97-41b3-bee2-36b9406dc2f4",
						"exec": [
							"postman.clearEnvironmentVariable(\"access_token\")",
							"",
							"tests['Response time is less than 400ms'] = responseTime < 400;",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests['User created successfully'] = jsonData.message === 'User created successfully.';",
							"",
							"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');",
							"tests[\"Content-Type is application/json\"] = postman.getResponseHeader('content-type') === 'application/json';"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"artur\",\n    \"password\": \"1234\"\n}"
				},
				"url": "{{url}}/register"
			},
			"response": []
		},
		{
			"name": "/auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "005bbd59-2cae-4aff-97c6-2a51c4ee2c3c",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
							"",
							"tests['Status code is 200'] = responseCode.code == 200;",
							"tests['Body contains access_token'] = responseBody.has(\"access_token\");",
							"",
							"tests['Response time less than 150ms'] = responseTime < 150;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"artur\",\n    \"password\": \"1234\"\n}"
				},
				"url": "{{url}}/auth"
			},
			"response": []
		},
		{
			"name": "/auth wrong password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c16143f-3230-427a-82c4-1cab7f26d914",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
							"",
							"tests['Status code is 401 unauthorized'] = responseCode.code == 401;",
							"tests['Body do not contains access_token'] = !responseBody.has(\"access_token\");",
							"",
							"tests['Response time less than 500ms'] = responseTime < 500;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"artur\",\n    \"password\": \"12345\"\n}"
				},
				"url": "{{url}}/auth"
			},
			"response": []
		},
		{
			"name": "/store/<string:name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15b7796b-adae-4869-b0f7-94ab2d809652",
						"exec": [
							"var jsonData = JSON.parse(responseBody)",
							"postman.setEnvironmentVariable(\"store_id\", jsonData.id)",
							"",
							"tests['Response time is less than 500ms'] = responseTime < 500;",
							"tests['Status code is 201'] = responseCode.code == 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "{{url}}/store/test_store"
			},
			"response": []
		},
		{
			"name": "/item/<string:name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "541c8cc6-ea43-4324-83fd-52d5ff62ce64",
						"exec": [
							"tests['Response time is less than 500ms'] = responseTime < 500;",
							"tests['Status code is 201'] = responseCode.code == 201;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"price\": 2.99,\n    \"store_id\": {{store_id}}\n}"
				},
				"url": "{{url}}/item/test_item"
			},
			"response": []
		},
		{
			"name": "/item/<string:name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bec773b8-2989-4c47-91e2-d9b3182f983f",
						"exec": [
							"jsonData = JSON.parse(responseBody)",
							"",
							"tests['Response time is less than 500ms'] = responseTime < 500;",
							"tests['Item altered'] = jsonData.price == 2.50"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"price\": 2.50,\n    \"store_id\": {{store_id}}\n}"
				},
				"url": "{{url}}/item/test_item"
			},
			"response": []
		},
		{
			"name": "/stores",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b5e5936c-2c39-46be-b8c5-fbd4b796efdd",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests['Response time is less than 150ms'] = responseTime < 150;",
							"tests['Status code is 200'] = responseCode.code === 200;",
							"tests['Name store test_store'] = jsonData.stores[1].name === 'test_store';",
							"tests['Item name test_item'] = jsonData.stores[1].items[0].name === 'test_item';"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "{{url}}/stores"
			},
			"response": []
		},
		{
			"name": "/item/<string:name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "073b787c-da81-43d9-afd7-f1ade59a7d95",
						"exec": [
							"jsonData = JSON.parse(responseBody)",
							"",
							"tests['Response time is less than 500ms'] = responseTime < 500;",
							"tests['Status code is 200'] = responseCode.code === 200;",
							"tests['Item deleted'] = jsonData.message == \"Item deleted\""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{access_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "{{url}}/item/test_item"
			},
			"response": []
		},
		{
			"name": "/store/<string:name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ba24f09f-d87e-41fd-adc3-29f8dda12ca2",
						"exec": [
							"var jsonData = JSON.parse(responseBody)",
							"",
							"tests['Response time is less than 500ms'] = responseTime < 500;",
							"tests['Status code is 200'] = responseCode.code == 200;",
							"tests['Store deleted'] = jsonData.message === 'Store deleted'"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "{{url}}/store/test_store"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}